// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Database design: https://github.com/Leo204-LKY/FormuLaTeX/issues/13

generator client {
  provider = "prisma-client-js"
  output   = "../generated/"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db" // Use only as a placeholder, real database path will be provided at runtime
}

/// formula_sessions - Session log for each formula operation
model formula_sessions {
  /// Unique identifier
  session_id     String   @id @default(uuid())
  /// Input type (image/handwritting/text)
  input_type     String
  /// Original input content (file path, text, etc.)
  source_content String
  /// Create time
  created_at     DateTime @default(now())

  formulas formulas[]
}

/// formula - Recognised or generated LaTeX formulas
model formulas {
  /// Unique identifier
  formula_id    String   @id @default(uuid())
  /// Source session UUID
  session_id    String
  /// Standard LaTeX code
  latex_code    String
  /// Used recognition API name (e.g., SimpleTex)
  recognized_by String
  /// (Optional) Recognition confidence
  confidence    Float?
  /// (Optional) Formula name by user
  name          String?
  /// (Optional) Description by user
  description   String?
  /// Create time
  created_at    DateTime @default(now())

  session         formula_sessions          @relation(fields: [session_id], references: [session_id])
  interpretations formula_interpretations[]
  conversations   formula_conversations[]
  tags            formula_tags[]
  favourties      favourites[]
}

/// formula_interpretations - Semantic interpretation of formulas by AI
model formula_interpretations {
  /// Unique identifier
  interpretation_id String   @id @default(uuid())
  /// Related formula UUID
  formula_id        String
  /// Semantic interpretation generated by AI
  explanation       String
  /// Used AI models (e.g., OpenAI GPT-4o/4.5 or DeepSeek-V3/R1)
  engine_used       String
  /// Generate time
  generated_at      DateTime @default(now())

  formula formulas @relation(fields: [formula_id], references: [formula_id])
}

/// tags - Formula tags
model tags {
  /// Unique identifier
  tag_id      String   @id
  /// Tag name (Unique)
  name        String   @unique
  /// (Optional) Tag description
  description String?
  /// Tag color for front-end display
  color       String   @default("#FFFFFF")
  /// Tag create time
  created_at  DateTime @default(now())
  /// Tag last update time
  updated_at  DateTime @updatedAt

  formulas formula_tags[]
}

/// formula_tags - Formulas & tags many-to-many mapping
model formula_tags {
  /// Affiliated formulas
  formula_id String
  /// Related tags
  tag_id     String
  /// Tag add time
  created_at DateTime @default(now())

  formula formulas @relation(fields: [formula_id], references: [formula_id])
  tag     tags     @relation(fields: [tag_id], references: [tag_id])

  @@id([formula_id, tag_id])
}

/// favourites - User favourited formulas
model favourites {
  /// Unique identifier
  favourite_id String   @id @default(uuid())
  /// Favourited formula UUID
  formula_id   String   @unique
  /// Favourite time
  created_at   DateTime @default(now())

  formula formulas @relation(fields: [formula_id], references: [formula_id])
}

/// formula_conversations - Conversation record for each conversation
model formula_conversations {
  /// Conversation unique identifier
  conversation_id String   @id
  /// Related formula UUID
  formula_id      String
  /// Conversation start time
  started_at      DateTime @default(now())
  /// Conversation last update time
  updated_at      DateTime @updatedAt

  formula  formulas   @relation(fields: [formula_id], references: [formula_id])
  messages messages[]
}

/// messages - Conversation messages
model messages {
  /// Message unique identifier
  message_id      String   @id @default(uuid())
  /// Related conversation UUID
  conversation_id String
  /// system/user/assistant
  role            String
  /// Message content
  content         String
  /// Send time
  created_at      DateTime @default(now())

  conversation formula_conversations @relation(fields: [conversation_id], references: [conversation_id])
}
